// <auto-generated />
using System;
using CabinPlanner.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CabinPlanner.DataAccess.Migrations
{
    [DbContext(typeof(CabinPlannerContext))]
    [Migration("20190429170850_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CabinPlanner.Model.Cabin", b =>
                {
                    b.Property<int>("CabinId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CabinName");

                    b.Property<int?>("CalendarId");

                    b.Property<int?>("OwnerPersonId");

                    b.HasKey("CabinId");

                    b.HasIndex("CalendarId");

                    b.HasIndex("OwnerPersonId");

                    b.ToTable("Cabins");
                });

            modelBuilder.Entity("CabinPlanner.Model.CabinUsers", b =>
                {
                    b.Property<int>("CabinUsersId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CabinId");

                    b.HasKey("CabinUsersId");

                    b.HasIndex("CabinId")
                        .IsUnique();

                    b.ToTable("CabinUsers");
                });

            modelBuilder.Entity("CabinPlanner.Model.Calendar", b =>
                {
                    b.Property<int>("CalendarId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("CalendarId");

                    b.ToTable("Calendars");
                });

            modelBuilder.Entity("CabinPlanner.Model.Family", b =>
                {
                    b.Property<int>("FamilyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FamiliyName");

                    b.HasKey("FamilyId");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("CabinPlanner.Model.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CabinUsersId");

                    b.Property<int?>("CalendarId");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email");

                    b.Property<int?>("FamilyId");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsMan");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.HasKey("PersonId");

                    b.HasIndex("CabinUsersId");

                    b.HasIndex("CalendarId");

                    b.HasIndex("FamilyId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("CabinPlanner.Model.PlannedTrip", b =>
                {
                    b.Property<int>("PlannedTripId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CalendarId");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("FromDate");

                    b.Property<int?>("PlannerPersonId");

                    b.Property<DateTime>("ToDate");

                    b.HasKey("PlannedTripId");

                    b.HasIndex("CalendarId");

                    b.HasIndex("PlannerPersonId");

                    b.ToTable("PlannedTrips");
                });

            modelBuilder.Entity("CabinPlanner.Model.Relation", b =>
                {
                    b.Property<int>("RelationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PersonAPersonId");

                    b.Property<int?>("PersonBPersonId");

                    b.Property<string>("TheirRelation");

                    b.HasKey("RelationId");

                    b.HasIndex("PersonAPersonId");

                    b.HasIndex("PersonBPersonId");

                    b.ToTable("Relations");
                });

            modelBuilder.Entity("CabinPlanner.Model.Cabin", b =>
                {
                    b.HasOne("CabinPlanner.Model.Calendar", "Calendar")
                        .WithMany()
                        .HasForeignKey("CalendarId");

                    b.HasOne("CabinPlanner.Model.Person", "Owner")
                        .WithMany("Cabins")
                        .HasForeignKey("OwnerPersonId");
                });

            modelBuilder.Entity("CabinPlanner.Model.CabinUsers", b =>
                {
                    b.HasOne("CabinPlanner.Model.Cabin")
                        .WithOne("CabinUsers")
                        .HasForeignKey("CabinPlanner.Model.CabinUsers", "CabinId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CabinPlanner.Model.Person", b =>
                {
                    b.HasOne("CabinPlanner.Model.CabinUsers")
                        .WithMany("CabinUsersList")
                        .HasForeignKey("CabinUsersId");

                    b.HasOne("CabinPlanner.Model.Calendar", "Calendar")
                        .WithMany()
                        .HasForeignKey("CalendarId");

                    b.HasOne("CabinPlanner.Model.Family", "Family")
                        .WithMany("FamilyMembers")
                        .HasForeignKey("FamilyId");
                });

            modelBuilder.Entity("CabinPlanner.Model.PlannedTrip", b =>
                {
                    b.HasOne("CabinPlanner.Model.Calendar")
                        .WithMany("PlannedTrips")
                        .HasForeignKey("CalendarId");

                    b.HasOne("CabinPlanner.Model.Person", "Planner")
                        .WithMany()
                        .HasForeignKey("PlannerPersonId");
                });

            modelBuilder.Entity("CabinPlanner.Model.Relation", b =>
                {
                    b.HasOne("CabinPlanner.Model.Person", "PersonA")
                        .WithMany()
                        .HasForeignKey("PersonAPersonId");

                    b.HasOne("CabinPlanner.Model.Person", "PersonB")
                        .WithMany()
                        .HasForeignKey("PersonBPersonId");
                });
#pragma warning restore 612, 618
        }
    }
}
